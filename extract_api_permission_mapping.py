'''
extract api permission mapping from PScout output

'''
import csv
import os
import os.path

from utilities import get_data_directory

DANGEROUS_PERMISSION = []

def load_dangerous_permissions():

    file_location = get_data_directory("permission_metadata", "dangerous_permission_list.txt")

    with open(file_location) as input_file:
        return input_file.read().split()

DANGEROUS_PERMISSION = load_dangerous_permissions()

def get_list_of_apis(source_str):
    results = []
    for lines in source_str:
        try:
            lines = lines.strip("<>")
            [module, rest]           = lines.split(": ")
            [return_value, func_def] = rest.split(" ")
            func_def = func_def.rstrip(")")
            [func_name, arguments] = func_def.split("(")

            module = "/".join(module.split("."))

            results.append(["/".join((module, func_name)), return_value, arguments])
        except ValueError:
            print lines
    
    return results


def parse_pscout_output(filename, api_lvl="API_22"):

    output_location = get_data_directory("training_data", api_lvl)

    if not os.path.exists(output_location):
        os.mkdir(output_location)

    output_file = os.path.join(output_location, api_lvl+"_parsed_api.csv")

    with open(filename) as pscout_input, open(output_file, "w") as output:
        raw_content = split_file = pscout_input.read()
        split_file = raw_content.split("\n")

        pscout_input.seek(0)

        line_numbers = []
        for line_num, line in enumerate(pscout_input):
            if line.startswith("Permission:"):
                line_numbers.append(line_num)
                
        line_numbers.append(len(split_file))

        results = []
        for i in range(len(line_numbers)-1):
            permission_res = get_list_of_apis(split_file[line_numbers[i]+2:line_numbers[i+1]])
            for index in range(len(permission_res)):
                permission_res[index] = [split_file[line_numbers[i]].split(".")[-1],] + permission_res[index]
            
            results += permission_res

        out_writer = csv.writer(output)
        out_writer.writerow(["Permission", "Function Name", "Return Value", "Arguments"])
        out_writer.writerows(results)

if __name__ == "__main__":
    parse_pscout_output("/Users/jeromemao/Desktop/EECS600/project/data/pscout_results/API_21/publishedapimapping.txt", "API_21")